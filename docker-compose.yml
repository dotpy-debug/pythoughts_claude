version: '3.9'

# Docker Compose configuration for Pythoughts Platform
# Local development environment with PostgreSQL, Redis, and the app

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: pythoughts-postgres
    restart: unless-stopped
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: pythoughts
      POSTGRES_PASSWORD: pythoughts_dev_password
      POSTGRES_DB: pythoughts_dev
      POSTGRES_INITDB_ARGS: '-E UTF8 --locale=C'
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/init-db.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U pythoughts']
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - pythoughts-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: pythoughts-redis
    restart: unless-stopped
    ports:
      - '6379:6379'
    command: redis-server --appendonly yes --requirepass pythoughts_redis_password
    volumes:
      - redis_data:/data
    healthcheck:
      test: ['CMD', 'redis-cli', '--raw', 'incr', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - pythoughts-network

  # Application (Development)
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
      args:
        VITE_API_URL: http://localhost:3000
        VITE_SUPABASE_URL: ${VITE_SUPABASE_URL}
        VITE_SUPABASE_ANON_KEY: ${VITE_SUPABASE_ANON_KEY}
    container_name: pythoughts-app
    restart: unless-stopped
    ports:
      - '5173:5173'
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://pythoughts:pythoughts_dev_password@postgres:5432/pythoughts_dev
      REDIS_URL: redis://:pythoughts_redis_password@redis:6379
      VITE_SUPABASE_URL: ${VITE_SUPABASE_URL}
      VITE_SUPABASE_ANON_KEY: ${VITE_SUPABASE_ANON_KEY}
    volumes:
      - ./src:/app/src
      - ./public:/app/public
      - ./index.html:/app/index.html
      - ./vite.config.ts:/app/vite.config.ts
      - ./tsconfig.json:/app/tsconfig.json
      - ./tsconfig.app.json:/app/tsconfig.app.json
      - /app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - pythoughts-network

  # pgAdmin (Optional - Database Management UI)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pythoughts-pgadmin
    restart: unless-stopped
    ports:
      - '5050:80'
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@pythoughts.local
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - pythoughts-network
    profiles:
      - tools

  # Redis Commander (Optional - Redis Management UI)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: pythoughts-redis-commander
    restart: unless-stopped
    ports:
      - '8081:8081'
    environment:
      REDIS_HOSTS: local:redis:6379:0:pythoughts_redis_password
    depends_on:
      - redis
    networks:
      - pythoughts-network
    profiles:
      - tools

networks:
  pythoughts-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local
