# ==============================================================================
# Redis 7 Production Configuration for Pythoughts
# ==============================================================================
#
# WORKLOAD: Cache + Session Store
# MEMORY: 256-512 MB
# PERSISTENCE: AOF (for session durability)
#
# ==============================================================================

# ==============================================================================
# NETWORK
# ==============================================================================

# Bind to localhost and Docker internal network
bind 127.0.0.1 -::1

# Port
port 6379

# TCP listen backlog
tcp-backlog 511

# Close connection after client idle time (seconds)
timeout 300

# TCP keepalive
tcp-keepalive 60

# ==============================================================================
# GENERAL
# ==============================================================================

# Run as daemon
daemonize no

# PID file
pidfile /var/run/redis_6379.pid

# Log level (debug, verbose, notice, warning)
loglevel notice

# Log file (empty = stdout)
logfile ""

# Number of databases
databases 16

# Show logo on startup
always-show-logo no

# Set server verbosity
set-proc-title yes
proc-title-template "{title} {listen-addr} {server-mode}"

# ==============================================================================
# SECURITY
# ==============================================================================

# Require password (set via command line or secrets)
# requirepass your_redis_password_here

# Disable dangerous commands
rename-command FLUSHDB ""
rename-command FLUSHALL ""
rename-command KEYS ""
rename-command CONFIG "CONFIG_ADMIN_ONLY"
rename-command SHUTDOWN "SHUTDOWN_ADMIN_ONLY"
rename-command BGREWRITEAOF "BGREWRITEAOF_ADMIN_ONLY"
rename-command BGSAVE "BGSAVE_ADMIN_ONLY"

# Protected mode
protected-mode yes

# ==============================================================================
# MEMORY MANAGEMENT
# ==============================================================================

# Maximum memory limit
maxmemory 256mb

# Eviction policy when maxmemory is reached
# Options: noeviction, allkeys-lru, volatile-lru, allkeys-random, volatile-random, volatile-ttl, allkeys-lfu, volatile-lfu
maxmemory-policy allkeys-lru

# LRU/LFU sample size (higher = more accurate but slower)
maxmemory-samples 5

# Evict expired keys in background
lazyfree-lazy-eviction yes
lazyfree-lazy-expire yes
lazyfree-lazy-server-del yes

# ==============================================================================
# PERSISTENCE - RDB (SNAPSHOT)
# ==============================================================================

# Save database to disk
# Format: save <seconds> <changes>
save 900 1      # After 900 sec (15 min) if at least 1 key changed
save 300 10     # After 300 sec (5 min) if at least 10 keys changed
save 60 10000   # After 60 sec if at least 10000 keys changed

# Stop writes if RDB save fails
stop-writes-on-bgsave-error yes

# Compress RDB files
rdbcompression yes

# Checksum RDB files
rdbchecksum yes

# RDB filename
dbfilename dump.rdb

# Working directory
dir /data

# ==============================================================================
# PERSISTENCE - AOF (APPEND ONLY FILE)
# ==============================================================================

# Enable AOF (more durable than RDB)
appendonly yes

# AOF filename
appendfilename "appendonly.aof"

# AOF fsync policy
# Options: always (slow, safest), everysec (good compromise), no (fast, least safe)
appendfsync everysec

# Don't fsync during rewrite
no-appendfsync-on-rewrite no

# Auto AOF rewrite trigger
auto-aof-rewrite-percentage 100
auto-aof-rewrite-min-size 64mb

# Load truncated AOF on startup
aof-load-truncated yes

# Use RDB-AOF mixed format
aof-use-rdb-preamble yes

# ==============================================================================
# REPLICATION
# ==============================================================================

# Replica read-only
replica-read-only yes

# Replica ping interval
repl-ping-replica-period 10

# Replication timeout
repl-timeout 60

# Disable TCP_NODELAY on replica socket
repl-disable-tcp-nodelay no

# Replica priority
replica-priority 100

# Minimum replicas for writes
# min-replicas-to-write 0
# min-replicas-max-lag 10

# ==============================================================================
# CLIENTS
# ==============================================================================

# Maximum number of clients
maxclients 10000

# ==============================================================================
# SLOW LOG
# ==============================================================================

# Slow log threshold (microseconds, -1 = disabled)
slowlog-log-slower-than 10000

# Slow log max length
slowlog-max-len 128

# ==============================================================================
# LATENCY MONITORING
# ==============================================================================

# Latency monitoring threshold (milliseconds, 0 = disabled)
latency-monitor-threshold 100

# ==============================================================================
# EVENT NOTIFICATION
# ==============================================================================

# Keyspace notifications (disabled by default for performance)
# notify-keyspace-events ""

# Example: Enable expiration events
# notify-keyspace-events Ex

# ==============================================================================
# ADVANCED CONFIG
# ==============================================================================

# Hash data type optimization
hash-max-listpack-entries 512
hash-max-listpack-value 64

# List data type optimization
list-max-listpack-size -2
list-compress-depth 0

# Set data type optimization
set-max-intset-entries 512
set-max-listpack-entries 128
set-max-listpack-value 64

# Sorted set data type optimization
zset-max-listpack-entries 128
zset-max-listpack-value 64

# HyperLogLog sparse representation limit
hll-sparse-max-bytes 3000

# Streams data type optimization
stream-node-max-bytes 4096
stream-node-max-entries 100

# Active rehashing
activerehashing yes

# Client output buffer limits
# Format: client-output-buffer-limit <class> <hard limit> <soft limit> <soft seconds>
client-output-buffer-limit normal 0 0 0
client-output-buffer-limit replica 256mb 64mb 60
client-output-buffer-limit pubsub 32mb 8mb 60

# Frequency of rehashing (1-500, higher = more CPU)
hz 10

# Dynamic HZ (auto-adjust based on load)
dynamic-hz yes

# AOF rewrite incremental fsync
aof-rewrite-incremental-fsync yes

# RDB save incremental fsync
rdb-save-incremental-fsync yes

# ==============================================================================
# ACTIVE DEFRAGMENTATION (Redis 4.0+)
# ==============================================================================

# Enable active defragmentation
activedefrag no

# Minimum fragmentation percentage to start defrag
# active-defrag-ignore-bytes 100mb
# active-defrag-threshold-lower 10

# Maximum fragmentation percentage to force defrag
# active-defrag-threshold-upper 100

# CPU percentage for defrag (1-75)
# active-defrag-cycle-min 1
# active-defrag-cycle-max 25

# Maximum scan fields
# active-defrag-max-scan-fields 1000

# ==============================================================================
# THREADED I/O
# ==============================================================================

# Number of I/O threads (Redis 6.0+)
# io-threads 4
# io-threads-do-reads yes

# ==============================================================================
# TLS/SSL (if enabled)
# ==============================================================================

# Enable TLS
# port 0
# tls-port 6379
# tls-cert-file /path/to/redis.crt
# tls-key-file /path/to/redis.key
# tls-ca-cert-file /path/to/ca.crt
# tls-auth-clients no
# tls-replication yes
# tls-cluster yes

# ==============================================================================
# MONITORING COMMANDS
# ==============================================================================
#
# INFO - Get server information
# MEMORY STATS - Get memory usage statistics
# SLOWLOG GET - Get slow log entries
# LATENCY DOCTOR - Get latency analysis
# CLIENT LIST - List connected clients
# MONITOR - Real-time command monitoring (use with caution)
#
# ==============================================================================

# ==============================================================================
# PERFORMANCE TUNING NOTES
# ==============================================================================
#
# 1. MEMORY OPTIMIZATION:
#    - Set maxmemory based on available RAM
#    - Choose appropriate eviction policy
#    - Use data type optimizations
#
# 2. PERSISTENCE TRADEOFF:
#    - RDB: Fast, point-in-time snapshots
#    - AOF: More durable, continuous writes
#    - RDB+AOF: Best of both worlds
#
# 3. NETWORK OPTIMIZATION:
#    - Enable tcp-keepalive
#    - Tune timeout settings
#    - Consider TLS overhead
#
# 4. CPU OPTIMIZATION:
#    - Use threaded I/O (Redis 6+)
#    - Tune hz setting
#    - Enable activerehashing
#
# 5. SECURITY:
#    - Always use password
#    - Rename dangerous commands
#    - Bind to specific interfaces
#    - Use TLS in production
#
# ==============================================================================
