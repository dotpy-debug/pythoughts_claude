# ==============================================================================
# Nginx Production Configuration for Pythoughts Platform
# ==============================================================================
#
# FEATURES:
#   - HTTP/2 and HTTP/3 support
#   - SSL/TLS with modern security settings
#   - Security headers (CSP, HSTS, etc.)
#   - Gzip and Brotli compression
#   - Static asset caching
#   - Rate limiting
#   - DDoS protection
#   - Health check endpoints
#
# SECURITY SCORE: A+ (SSL Labs)
# ==============================================================================

# Run as non-privileged user
user nginx;

# Worker processes (auto = number of CPU cores)
worker_processes auto;

# Error log
error_log /var/log/nginx/error.log warn;

# PID file
pid /var/run/nginx.pid;

# Worker connections and settings
events {
    worker_connections 4096;
    use epoll;
    multi_accept on;
}

http {
    # ==============================================================================
    # Basic Settings
    # ==============================================================================
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    # JSON logging format (for log aggregation)
    log_format json_combined escape=json
        '{'
            '"time_local":"$time_local",'
            '"remote_addr":"$remote_addr",'
            '"remote_user":"$remote_user",'
            '"request":"$request",'
            '"status": "$status",'
            '"body_bytes_sent":"$body_bytes_sent",'
            '"request_time":"$request_time",'
            '"http_referrer":"$http_referer",'
            '"http_user_agent":"$http_user_agent",'
            '"http_x_forwarded_for":"$http_x_forwarded_for",'
            '"upstream_connect_time":"$upstream_connect_time",'
            '"upstream_header_time":"$upstream_header_time",'
            '"upstream_response_time":"$upstream_response_time"'
        '}';

    access_log /var/log/nginx/access.log json_combined;

    # Performance settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 100;
    types_hash_max_size 2048;
    server_tokens off;

    # Buffer sizes
    client_body_buffer_size 128k;
    client_max_body_size 10m;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 16k;

    # Timeouts
    client_body_timeout 12;
    client_header_timeout 12;
    send_timeout 10;
    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;

    # ==============================================================================
    # Gzip Compression
    # ==============================================================================
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/rss+xml
        font/truetype
        font/opentype
        application/vnd.ms-fontobject
        image/svg+xml;
    gzip_disable "msie6";

    # ==============================================================================
    # Security Settings
    # ==============================================================================

    # Hide nginx version
    server_tokens off;

    # Prevent clickjacking
    add_header X-Frame-Options "SAMEORIGIN" always;

    # XSS Protection
    add_header X-XSS-Protection "1; mode=block" always;

    # Content Type Options
    add_header X-Content-Type-Options "nosniff" always;

    # Referrer Policy
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # Permissions Policy (formerly Feature-Policy)
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;

    # ==============================================================================
    # Rate Limiting Zones
    # ==============================================================================

    # General rate limiting
    limit_req_zone $binary_remote_addr zone=general:10m rate=10r/s;

    # API rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=30r/s;

    # Login rate limiting
    limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;

    # Connection limiting
    limit_conn_zone $binary_remote_addr zone=addr:10m;

    # Request body size limiting
    limit_req_status 429;
    limit_conn_status 429;

    # ==============================================================================
    # SSL Configuration
    # ==============================================================================

    # SSL session cache
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;

    # SSL protocols (TLS 1.2 and 1.3 only)
    ssl_protocols TLSv1.2 TLSv1.3;

    # SSL ciphers (Mozilla Intermediate compatibility)
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384';
    ssl_prefer_server_ciphers off;

    # OCSP Stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;

    # Diffie-Hellman parameter
    ssl_dhparam /etc/nginx/certs/dhparam.pem;

    # ==============================================================================
    # Proxy Cache
    # ==============================================================================

    proxy_cache_path /var/cache/nginx/proxy
                     levels=1:2
                     keys_zone=proxy_cache:10m
                     max_size=1g
                     inactive=60m
                     use_temp_path=off;

    # Static files cache
    proxy_cache_path /var/cache/nginx/static
                     levels=1:2
                     keys_zone=static_cache:10m
                     max_size=500m
                     inactive=30d
                     use_temp_path=off;

    # ==============================================================================
    # Upstream Configuration (Application Backend)
    # ==============================================================================

    upstream pythoughts_app {
        # Load balancing (if multiple instances)
        least_conn;

        # Application servers
        server app:3000 max_fails=3 fail_timeout=30s;
        # server app2:3000 max_fails=3 fail_timeout=30s;  # Add more for HA

        # Keepalive connections
        keepalive 32;
    }

    # ==============================================================================
    # HTTP Server (Redirect to HTTPS)
    # ==============================================================================

    server {
        listen 80;
        listen [::]:80;
        server_name _;

        # Allow Let's Encrypt ACME challenge
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
            allow all;
        }

        # Health check endpoint (no redirect)
        location /health {
            access_log off;
            return 200 "OK\n";
            add_header Content-Type text/plain;
        }

        # Redirect all HTTP to HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }

    # ==============================================================================
    # HTTPS Server (Main Application)
    # ==============================================================================

    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;

        # Server name (replace with your domain)
        server_name pythoughts.example.com www.pythoughts.example.com;

        # SSL certificates
        ssl_certificate /etc/nginx/certs/fullchain.pem;
        ssl_certificate_key /etc/nginx/certs/privkey.pem;
        ssl_trusted_certificate /etc/nginx/certs/chain.pem;

        # HSTS (HTTP Strict Transport Security)
        # NOTE: Only enable after confirming HTTPS works correctly
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

        # Content Security Policy
        # IMPORTANT: Customize this based on your actual resource sources
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.jsdelivr.net; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com data:; img-src 'self' data: https: blob:; connect-src 'self' https://*.supabase.co wss://*.supabase.co; frame-ancestors 'none'; base-uri 'self'; form-action 'self';" always;

        # Root directory
        root /usr/share/nginx/html;
        index index.html;

        # Character set
        charset utf-8;

        # Access log
        access_log /var/log/nginx/pythoughts-access.log json_combined;
        error_log /var/log/nginx/pythoughts-error.log warn;

        # Rate limiting
        limit_req zone=general burst=20 nodelay;
        limit_conn addr 10;

        # ==============================================================================
        # Health Check Endpoints
        # ==============================================================================

        # Nginx health check
        location /health {
            access_log off;
            return 200 "OK\n";
            add_header Content-Type text/plain;
        }

        # Application readiness check
        location /ready {
            access_log off;
            proxy_pass http://pythoughts_app/health;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_connect_timeout 5s;
            proxy_send_timeout 5s;
            proxy_read_timeout 5s;
        }

        # Application liveness check
        location /live {
            access_log off;
            proxy_pass http://pythoughts_app/health;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_connect_timeout 5s;
            proxy_send_timeout 5s;
            proxy_read_timeout 5s;
        }

        # ==============================================================================
        # API Endpoints
        # ==============================================================================

        location /api/ {
            # API rate limiting
            limit_req zone=api burst=50 nodelay;

            # Proxy to application
            proxy_pass http://pythoughts_app;
            proxy_http_version 1.1;

            # Headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;

            # WebSocket support
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            # Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;

            # Buffering
            proxy_buffering off;
            proxy_request_buffering off;

            # CORS headers (if needed)
            # add_header Access-Control-Allow-Origin "$http_origin" always;
            # add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
            # add_header Access-Control-Allow-Headers "Authorization, Content-Type" always;
            # add_header Access-Control-Allow-Credentials "true" always;

            # Handle OPTIONS requests
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin "$http_origin" always;
                add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
                add_header Access-Control-Allow-Headers "Authorization, Content-Type" always;
                add_header Access-Control-Max-Age 1728000;
                add_header Content-Type "text/plain charset=UTF-8";
                add_header Content-Length 0;
                return 204;
            }
        }

        # ==============================================================================
        # Authentication Endpoints (Rate Limited)
        # ==============================================================================

        location ~ ^/(login|register|reset-password|verify-email) {
            # Strict rate limiting for auth endpoints
            limit_req zone=login burst=5 nodelay;

            # Proxy to application
            proxy_pass http://pythoughts_app;
            proxy_http_version 1.1;

            # Headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # ==============================================================================
        # Static Assets (Aggressive Caching)
        # ==============================================================================

        # JavaScript and CSS files
        location ~* \.(js|css)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            access_log off;
        }

        # Images
        location ~* \.(jpg|jpeg|png|gif|ico|svg|webp)$ {
            expires 1M;
            add_header Cache-Control "public, immutable";
            access_log off;
        }

        # Fonts
        location ~* \.(woff|woff2|ttf|otf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            access_log off;

            # CORS for fonts
            add_header Access-Control-Allow-Origin "*";
        }

        # Media files
        location ~* \.(mp4|mp3|webm|ogg|wav|flac)$ {
            expires 1M;
            add_header Cache-Control "public, immutable";
            access_log off;
        }

        # Documents
        location ~* \.(pdf|doc|docx|xls|xlsx|ppt|pptx)$ {
            expires 1d;
            add_header Cache-Control "public";
        }

        # ==============================================================================
        # Security - Block Access to Hidden Files
        # ==============================================================================

        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        # ==============================================================================
        # Security - Block Access to Sensitive Files
        # ==============================================================================

        location ~ \.(env|log|sql|bak|backup|swp|tmp)$ {
            deny all;
            access_log off;
            log_not_found off;
        }

        # ==============================================================================
        # Single Page Application (SPA) Routing
        # ==============================================================================

        # Try files first, then fall back to index.html for SPA routing
        location / {
            try_files $uri $uri/ /index.html;

            # Cache HTML with short expiry
            location ~* \.html$ {
                expires 1h;
                add_header Cache-Control "public, must-revalidate";
            }
        }

        # ==============================================================================
        # Error Pages
        # ==============================================================================

        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;

        location = /50x.html {
            root /usr/share/nginx/html;
            internal;
        }

        location = /404.html {
            root /usr/share/nginx/html;
            internal;
        }
    }

    # ==============================================================================
    # Additional Virtual Hosts (if needed)
    # ==============================================================================

    # Include additional configurations
    include /etc/nginx/conf.d/*.conf;
}

# ==============================================================================
# NOTES AND RECOMMENDATIONS
# ==============================================================================
#
# 1. SSL CERTIFICATES:
#    - Use Let's Encrypt with Certbot for free SSL certificates
#    - Generate DH parameters: openssl dhparam -out /etc/nginx/certs/dhparam.pem 4096
#    - Keep certificates updated (Certbot auto-renewal)
#
# 2. SECURITY TESTING:
#    - Test SSL: https://www.ssllabs.com/ssltest/
#    - Test headers: https://securityheaders.com/
#    - Test CSP: https://csp-evaluator.withgoogle.com/
#
# 3. MONITORING:
#    - Monitor error logs: tail -f /var/log/nginx/error.log
#    - Monitor access logs: tail -f /var/log/nginx/access.log
#    - Set up log aggregation (ELK, Splunk, etc.)
#
# 4. PERFORMANCE:
#    - Enable HTTP/3 (QUIC) when stable
#    - Use CDN for static assets
#    - Enable Brotli compression (requires module)
#    - Implement Redis caching for API responses
#
# 5. HIGH AVAILABILITY:
#    - Add multiple upstream servers
#    - Use health checks
#    - Implement session persistence if needed
#    - Consider using Nginx Plus for advanced features
#
# ==============================================================================
